define("mixins",["module"],function(module){"use strict";var rjsMixins,defContext=require.s.contexts._,unbundledContext=require.s.newContext("$"),defaultConfig=defContext.config,unbundledConfig={baseUrl:defaultConfig.baseUrl,paths:defaultConfig.paths,shim:defaultConfig.shim,config:defaultConfig.config,map:defaultConfig.map};function getPath(name,config){return function(url,config){var baseUrl=config.baseUrl||"",index=url.indexOf(baseUrl);return~index&&(url=url.substring(baseUrl.length-index)),url}(unbundledContext.require.toUrl(name),config)}return unbundledContext.configure(unbundledConfig),rjsMixins={load:function(name,req,onLoad,config){var path=getPath(name,config),mixins=this.getMixins(path);req([name].concat(mixins),function(){onLoad(function(target){return Array.prototype.slice.call(arguments,1).forEach(function(mixin){target=mixin(target)}),target}.apply(null,arguments))})},getMixins:function(path){var mixins,config=module.config()||{};return-1!==path.indexOf("?")&&(path=path.substring(0,path.indexOf("?"))),mixins=config[path]||{},Object.keys(mixins).filter(function(mixin){return!1!==mixins[mixin]})},hasMixins:function(path){return this.getMixins(path).length},processNames:function(names,context){var config=context.config;function processName(name){var path=getPath(name,config);return function(name){return!!~name.indexOf("!")}(name)||!function(name){return!!~name.indexOf("./")}(name)&&!rjsMixins.hasMixins(path)?name:function(name){return"mixins!"+name}(name)}return"string"!=typeof names?names.map(processName):processName(names)}}}),require(["mixins"],function(mixins){"use strict";var defContext=require.s.contexts._,originalContextRequire=defContext.require,processNames=mixins.processNames;defContext.require=function(deps,callback,errback){return deps=processNames(deps,defContext),originalContextRequire(deps,callback,errback)},Object.keys(originalContextRequire).forEach(function(key){defContext.require[key]=originalContextRequire[key]}),defContext.defQueue.shift=function(){var queueItem=Array.prototype.shift.call(this),lastDeps=queueItem&&queueItem[1];return Array.isArray(lastDeps)&&(queueItem[1]=processNames(queueItem[1],defContext)),queueItem}});